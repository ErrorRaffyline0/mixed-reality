design\comfort.md:88:Mixed reality apps are unique because users can move freely in the world and interact with virtual content like as though they were real objects. To maintain this impression, it's critical to render holograms so they appear stable in the world and animate smoothly. Rendering at a [minimum of 60 frames per second (FPS)](../develop/platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md) helps achieve this goal. There are some Mixed Reality devices that support rendering at framerates higher than 60 FPS and for these devices it's recommended to render at the higher framerates to provide an optimal user experience.
design\comfort.md:92:To draw holograms to look,  like [they're stable in the real or virtual world](../develop/platform-capabilities-and-apis/hologram-stability.md), apps need to render images from the user's position. Since image rendering takes time, HoloLens and other Windows Mixed Reality devices predict where a user's head will be when the images are shown in the displays. This prediction algorithm is an approximation. Windows Mixed Reality algorithms and hardware adjust the rendered image to account for the discrepancy between the predicted head position and the actual head position. This process makes the image seen by the user appear as if it were rendered from the correct location, and holograms feel stable. The updates work best for small changes in head position, and they can't completely account for some rendered image differences, like those caused by motion-parallax.
design\comfort.md:172:* [Hologram stability](../develop/platform-capabilities-and-apis/hologram-stability.md)
design\cursors.md:118:* Cursors are especially prone to [color separation](../develop/platform-capabilities-and-apis/hologram-stability.md#color-separation).
design\holographic-frame.md:75:Proper use of the holographic frame is fundamental to the [performance quality](../develop/platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md) experiences. A common technical (and usability) challenge is overloading the user's frame with digital content, causing rendering performance to degrade. Consider instead using the full space around the user to arrange digital content, using the techniques described above, to lessen the burden of rendering and ensure an optimal display quality.
design\holographic-frame.md:77:Digital content within the holographic frame of the HoloLens can also be paired with the [stabilization plane](../develop/platform-capabilities-and-apis/case-study-using-the-stabilization-plane-to-reduce-holographic-turbulence.md) for optimal performance and [hologram stability](../develop/platform-capabilities-and-apis/hologram-stability.md).
design\holographic-frame.md:148:* [Hologram stability](../develop/platform-capabilities-and-apis/hologram-stability.md)
design\keyboard.md:34:> [Deploy to HoloLens or Windows Mixed Reality immersive headsets](../develop/platform-capabilities-and-apis/using-visual-studio.md)
design\spatial-mapping.md:72:For HoloLens 2, it's possible to query a static version of the spatial mapping data using [Scene understanding SDK](../develop/platform-capabilities-and-apis/scene-understanding-SDK.md) (EnableWorldMesh setting). Here are the differences between two ways of accessing the spatial mapping data:
design\spatial-mapping.md:223:[Performance](../develop/platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md) is an important concern when rendering spatial mapping meshes. Here are some rendering performance techniques specific to rendering spatial mapping meshes:
design\spatial-mapping.md:363:* The [HoloLens emulator](../develop/platform-capabilities-and-apis/using-the-hololens-emulator.md) can be used to develop applications using spatial mapping without access to a physical HoloLens. It allows you to simulate a live session on a HoloLens in a realistic environment, with all of the data your application would normally consume, including HoloLens motion, spatial coordinate systems, and spatial mapping meshes. This can be used to provide reliable, repeatable input, which can be useful for debugging problems and evaluating changes to your code.
design\spatial-mapping.md:365:* The [Windows device portal 3D view](../develop/platform-capabilities-and-apis/using-the-windows-device-portal.md#3d-view) provides a way to see all of the spatial surfaces currently available via the spatial mapping system. This provides a basis of comparison for the spatial surfaces inside your application; for example, you can easily tell if any spatial surfaces are missing or are being displayed in the wrong place.
develop\install-the-tools.md:16:Don't have a mixed reality device? You can install the [HoloLens emulator](platform-capabilities-and-apis/using-the-hololens-emulator.md) to test some functionality of mixed reality apps without a HoloLens. You can also use the [Windows Mixed Reality simulator](platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md) to test your mixed reality apps for immersive headsets.
develop\install-the-tools.md:33:| ![Visual Studio logo](images/HoloLensIcon.jpg)<br><br><a href="https://go.microsoft.com/fwlink/?linkid=2174356" target="_blank">**HoloLens 2 Emulator (Windows Holographic, version 21H2 October 2021 Update)** (Install link: 10.0.20348.1010)</a><br> <br><a href="https://go.microsoft.com/fwlink/?linkid=2065980" target="_blank">**HoloLens (1st gen) Emulator** (Install link: 10.0.17763.134)</a> <br><br>The optional emulator lets you run applications on a HoloLens virtual machine image without a physical HoloLens.<br> <br> | See [Using the HoloLens emulator](../develop/platform-capabilities-and-apis/using-the-hololens-emulator.md) for more information on getting started with the optional emulator.<br> <br> **Your system must support Hyper-V** for the emulator installation to succeed. Reference the System Requirements section below for details. <br> <br> **Note on HoloLens (1st gen) Emulator** <br>  Visual Studio 2017 is required to successfully complete the installation. If you're installing the HoloLens (1st gen) emulator with Visual Studio 2019 you need to deselect the VS templates and [install them from the Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=WindowsMixedRealityteam.WindowsMixedRealityAppTemplatesVSIX). |
develop\javascript\tutorials\babylonjs-webxr-helloworld\interact-03.md:272:1. [Enable the Windows Mixed Reality Simulator](../../../platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md) if you have not done so in the past.
develop\javascript\tutorials\babylonjs-webxr-helloworld\introduction-01.md:29:* Optional: [Windows Mixed Reality simulator](../../../platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md)
develop\javascript\tutorials\babylonjs-webxr-piano\introduction-01.md:35:* Any [VR headset](../../../../discover/immersive-headset-hardware-details.md) or [Windows Mixed Reality simulator](../../../platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md)
develop\javascript\tutorials\babylonjs-webxr-piano\keyboard-interaction-03.md:322:1. In order to open the page in your immersive VR headset, you must first connect your headset to your developer machine and make sure that it is [set up for use in the Windows Mixed Reality App](/enthusiast-guide/set-up-windows-mixed-reality). If you're using the Windows Mixed Reality Simulator, [make sure that it is enabled](../../../platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md).
develop\native\mixed-reality-capture-directx.md:199:* [Mixed reality capture overview](../platform-capabilities-and-apis/mixed-reality-capture-overview.md)
develop\native\openxr-getting-started.md:19:1. Set up a HoloLens 2 or follow the instructions to [install a recent version of the HoloLens 2 emulator](../platform-capabilities-and-apis/using-the-hololens-emulator.md). You should already have OpenXR 1.0 ready to go if you're using a recent emulator image or the device has updated its OS.
develop\native\openxr-getting-started.md:24:> If you're using the emulator, the emulator image will reset each time you start it, and so your best bet is to just make sure that you have [the latest version of the HoloLens 2 emulator image](../platform-capabilities-and-apis/using-the-hololens-emulator.md).
develop\native\openxr-getting-started.md:31:2. Set up a Windows Mixed Reality headset or follow the instructions to [enable the Windows Mixed Reality simulator](../platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md).
develop\native\openxr-getting-started.md:41:When using the HoloLens 2 emulator, the easiest way to install the OpenXR Developer Tools for Windows Mixed Reality is through the [Windows Device Portal](../platform-capabilities-and-apis/using-the-windows-device-portal.md). Navigating to the "OpenXR" page and then clicking the "Install" button under "Developer Features", which also works on physical HoloLens 2 devices.
develop\native\openxr-getting-started.md:57:After building an OpenXR UWP app package, you can [deploy that package](../platform-capabilities-and-apis/using-visual-studio.md) to either a HoloLens 2 device or the HoloLens 2 Emulator.
develop\native\rendering-in-directx.md:309:Windows Mixed Reality includes features for [image stabilization](../platform-capabilities-and-apis/hologram-stability.md) to keep holograms positioned where a developer or user puts them in the world. Image stabilization helps hide the latency inherent in a rendering pipeline to ensure the best holographic experiences for users. A focus point may be specified to enhance image stabilization even further, or a depth buffer may be provided to compute optimized image stabilization in real time.
develop\native\rendering-in-directx.md:746:* [Using the HoloLens emulator](../platform-capabilities-and-apis/using-the-hololens-emulator.md)develop\native\volume-rendering.md:13:If you're new to volume rendering, we recommend that you [read our overview](../platform-capabilities-and-apis/volume-rendering-overview.md).
develop\porting-apps\building-2d-apps.md:71:Now that your UWP app targets "Windows.Universal", let's build your app and run it in the [HoloLens Emulator](../platform-capabilities-and-apis/using-the-hololens-emulator.md).
develop\porting-apps\building-2d-apps.md:75:  ![x86 build configuration in Visual Studio](../platform-capabilities-and-apis/images/x86setting.png)<br>
develop\porting-apps\building-2d-apps.md:152:It's important to test your app to make sure the text is readable, the buttons are targetable, and the overall app looks correct. You can [test](../platform-capabilities-and-apis/testing-your-app-on-hololens.md) on a desktop headset, a HoloLens, an emulator, or a touch device with resolution set to 1280x720 @150%.
develop\porting-apps\building-2d-apps.md:179:* [Using the HoloLens emulator](../platform-capabilities-and-apis/using-the-hololens-emulator.md)develop\porting-apps\includes\unity-porting-guidance.md:37:2. Learn about [Using the Windows Mixed Reality simulator](../../platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md) and [Navigating the Windows Mixed Reality home](../../../discover/navigating-the-windows-mixed-reality-home.md)
develop\porting-apps\includes\unity-porting-guidance.md:97:Both [Unity](https://docs.unity3d.com/Manual/Profiler.html) and [Visual Studio](/visualstudio/profiling/index) include performance profilers, and both [Microsoft](../../platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md) and [Intel](https://software.intel.com/articles/vr-content-developer-guide) publish guidelines on performance profiling and optimization. There's an extensive discussion of performance available at [Understanding Performance for Mixed Reality](../../platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md). Further, there are specific details for Unity under [Performance Recommendations for Unity](../../unity/performance-recommendations-for-unity.md).
develop\porting-apps\porting-guides.md:56:* [Understanding Performance for Mixed Reality](../platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md)
develop\porting-apps\porting-hl1-hl2.md:141:* [Understanding performance for Mixed Reality](../platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md)develop\unity\camera-in-unity.md:13:When you wear a mixed reality headset, it becomes the center of your holographic world. The Unity [Camera](https://docs.unity3d.com/Manual/class-Camera.html) component will automatically handle stereoscopic rendering and follow your head movement and rotation. However, to fully optimize visual quality and [hologram stability](../platform-capabilities-and-apis/hologram-stability.md), you should set the camera settings described below.
develop\unity\camera-in-unity.md:53:> If you're building for HL2, we recommend creating an eye-level experience, or consider using [Scene Understanding](../platform-capabilities-and-apis/scene-understanding-sdk.md) to reason about the floor of your scene.
develop\unity\camera-in-unity.md:80:Rendering content too close to the user can be uncomfortable in mixed reality. You can adjust the [near and far clip planes](../platform-capabilities-and-apis/hologram-stability.md#hologram-render-distances) on the Camera component.
develop\unity\camera-in-unity.md:83:2. In the **Inspector** panel, find the **Camera** component **Clipping Planes** and change the **Near** textbox from **0.3** to **0.85**. Content rendered even closer can lead to user discomfort and should be avoided per the [render distance guidelines](../platform-capabilities-and-apis/hologram-stability.md#hologram-render-distances).
develop\unity\camera-in-unity.md:122:* [Hologram stability](../platform-capabilities-and-apis/hologram-stability.md)
develop\unity\exporting-and-building-a-unity-visual-studio-solution.md:55:The remainder of building and deploying apps happens in [Visual Studio](../platform-capabilities-and-apis/using-visual-studio.md). You will need to specify a Unity build configuration. Unity's naming conventions may differ from what you're used to in Visual Studio:
develop\unity\focus-point-in-unity.md:16:Use the [focus point](../platform-capabilities-and-apis/hologram-stability.md#reprojection) to provide HoloLens with a hint about how to best stabilize the holograms currently being displayed.
develop\unity\focus-point-in-unity.md:59:> [Deploy to HoloLens or Windows Mixed Reality immersive headsets](../platform-capabilities-and-apis/using-visual-studio.md)
develop\unity\focus-point-in-unity.md:65:* [Stabilization plane](../platform-capabilities-and-apis/hologram-stability.md#reprojection)
develop\unity\keyboard-input-in-unity.md:63:> [Deploy to HoloLens or Windows Mixed Reality immersive headsets](../platform-capabilities-and-apis/using-visual-studio.md)
develop\unity\performance-recommendations-for-unity.md:14:This article builds on the [performance recommendations for mixed reality](../platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md), but focuses on Unity-specific improvements.
develop\unity\performance-recommendations-for-unity.md:251:It's recommended to enable **Depth buffer sharing** under **Player XR Settings** to optimize for [hologram stability](../platform-capabilities-and-apis/Hologram-stability.md). When enabling depth-based late-stage reprojection with this setting however, it's recommended to select **16-bit depth format** instead of **24-bit depth format**. The 16-bit depth buffers will drastically reduce the bandwidth (and thus power) associated with depth buffer traffic. This can be a big win both in power reduction and performance improvement. However, there are two possible negative outcomes by using *16-bit depth format*.
develop\unity\preview-and-debug-your-app.md:17:To learn more about Holographic Remoting, see [Holographic Remoting overview](../platform-capabilities-and-apis/holographic-remoting-overview.md)
develop\unity\preview-and-debug-your-app.md:23:To use Holographic Remoting, you need to install the [Holographic Remoting Player](../platform-capabilities-and-apis/holographic-remoting-player.md) app from the Microsoft Store on your HoloLens. As explained below, after you download and run the app, you'll see the version number and IP address to connect to. **You'll need v2.4 or later in order to work with the OpenXR plugin**.
develop\unity\preview-and-debug-your-app.md:32:* [Holographic Remoting Player](../platform-capabilities-and-apis/holographic-remoting-player.md)
develop\unity\quality-fundamentals.md:78:For more information, see [frame rate](../platform-capabilities-and-apis/hologram-stability.md#frame-rate) in the [hologram stability](../platform-capabilities-and-apis/hologram-stability.md) article.
develop\unity\quality-fundamentals.md:86:For detailed information, see [reprojection](../platform-capabilities-and-apis/hologram-stability.md#reprojection) in the [hologram stability](../platform-capabilities-and-apis/hologram-stability.md) article.
develop\unity\recommended-settings-for-unity.md:168:* [Understanding performance for Mixed Reality](../platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md)
develop\unity\tutorials\holograms-100.md:148:1. On your HoloLens, install and run the [Holographic Remoting Player](../../platform-capabilities-and-apis/holographic-remoting-player.md), available from the Windows Store. Launch the application on the device, and it will enter a waiting state and show the IP address of the device. Note down the IP.
develop\unity\tutorials\holograms-100.md:202:**For HoloLens**, If this is the first time deploying to your device, you will need to pair [using Visual Studio](../../platform-capabilities-and-apis/using-visual-studio.md).
develop\unity\tutorials\holograms-101.md:41:* A HoloLens device [configured for development](../../platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode).
develop\unity\tutorials\holograms-101.md:120:* Click **Debug > Start Without debugging** or press **Ctrl + F5**. If this is the first time deploying to your device, you will need to [pair it with Visual Studio](../../platform-capabilities-and-apis/using-visual-studio.md#pairing-your-device).
develop\unity\tutorials\holograms-101e.md:114:  * After some time the emulator will start with the Origami project. When first launching the [emulator](../../platform-capabilities-and-apis/using-the-hololens-emulator.md), it can take as long as 15 minutes for the emulator to start up. Once it starts, do not close it.
develop\unity\tutorials\holograms-210.md:48:* A HoloLens device [configured for development](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode).
develop\unity\tutorials\holograms-210.md:156:4. In the top menu bar, click **Debug -> Start Without debugging** or press **Ctrl + F5**. If this is the first time deploying to your device, you will need to [pair it with Visual Studio](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#pairing-your-device).
develop\unity\tutorials\holograms-211.md:50:* A HoloLens device [configured for development](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode).
develop\unity\tutorials\holograms-211.md:97:4. In the top menu bar, click **Debug -> Start Without debugging** or press **Ctrl + F5**. If this is the first time deploying to your device, you will need to [pair it with Visual Studio](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#pairing-your-device).
develop\unity\tutorials\holograms-212.md:59:* A HoloLens device [configured for development](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode).
develop\unity\tutorials\holograms-212.md:106:4. In the top menu bar, click **Debug -> Start Without debugging** or press **Ctrl + F5**. If this is the first time deploying to your device, you will need to [pair it with Visual Studio](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#pairing-your-device).
develop\unity\tutorials\holograms-220.md:41:* A HoloLens device [configured for development](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode).
develop\unity\tutorials\holograms-220.md:107:4. In the top menu bar, click **Debug -> Start Without debugging** or press **Ctrl + F5**. If this is the first time deploying to your device, you will need to [pair it with Visual Studio](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#pairing-your-device).
develop\unity\tutorials\holograms-230.md:43:* A HoloLens device [configured for development](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode).
develop\unity\tutorials\holograms-240.md:40:* At least two HoloLens devices [configured for development](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode).
develop\unity\tutorials\holograms-240.md:105:* Click **Debug > Start Without debugging** or press **Ctrl + F5**. If this is the first time deploying to your device, you will need to [pair it with Visual Studio](../../../develop/platform-capabilities-and-apis/using-visual-studio.md#pairing-your-device).
develop\unity\tutorials\mr-learning-sharing-01.md:34:* A HoloLens 2 device [configured for development](../../platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode)
develop\unity\tutorials\mrlearning-base.md:44:* A HoloLens 2 device [configured for development](../../platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode)
develop\unity\unity-development-overview.md:75:* [HoloLens or Windows Mixed Reality immersive headset](../platform-capabilities-and-apis/using-visual-studio.md)
develop\unity\unity-development-overview.md:76:* [HoloLens emulator](../platform-capabilities-and-apis/using-the-hololens-emulator.md)
develop\unity\unity-development-overview.md:77:* [Windows Mixed Reality immersive headset simulator](../platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md)
develop\unity\unity-development-overview.md:101:* [Input porting guide](../platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md)
develop\unity\unity-development-wmr-overview.md:63:* [Windows Mixed Reality immersive headset](../platform-capabilities-and-apis/using-visual-studio.md)
develop\unity\unity-development-wmr-overview.md:64:* [Windows Mixed Reality immersive headset simulator](../platform-capabilities-and-apis/using-the-windows-mixed-reality-simulator.md)
develop\unity\unity-play-mode.md:31:Holographic Remoting requires a fast PC and Wi-Fi connection. You can find more details in the [Holographic Remoting Player](../platform-capabilities-and-apis/holographic-remoting-player.md) documentation.
develop\unity\unity-play-mode.md:37:* [Holographic Remoting Player](../platform-capabilities-and-apis/holographic-remoting-player.md)
develop\unity\unity-xrdevice-advanced.md:68:> Changing the state of the native objects received via HolographicFrameNativeData may cause unpredictable behavior and rendering artifacts, especially if Unity also reasons about that same state.  For example, you should not call HolographicFrame.UpdateCurrentPrediction, or else the pose prediction that Unity renders with that frame will be out of sync with the pose that Windows is expecting, which will reduce [hologram stability](../platform-capabilities-and-apis/hologram-stability.md).
develop\unity\use-pc-resources.md:19:To learn more about Holographic Remoting, see [Holographic Remoting overview](../platform-capabilities-and-apis/holographic-remoting-overview.md)
develop\unity\use-pc-resources.md:25:To use Holographic Remoting, you need to install the [Holographic Remoting Player](../platform-capabilities-and-apis/holographic-remoting-player.md) app from the Microsoft Store on your HoloLens 2. As explained below, after you download and run the app, you'll see the version number and IP address to connect to. **You'll need v2.4 or later in order to work with the OpenXR plugin**.
develop\unity\use-pc-resources.md:52:To learn more about Holographic Remoting, see [Holographic Remoting overview](../platform-capabilities-and-apis/holographic-remoting-overview.md)
develop\unity\use-pc-resources.md:76:* [Holographic Remoting Player](../platform-capabilities-and-apis/holographic-remoting-player.md)
develop\unreal\mixed-reality-capture-unreal.md:57:* [Mixed reality capture overview](../platform-capabilities-and-apis/mixed-reality-capture-overview.md)
develop\unreal\performance-recommendations-for-unreal.md:14:Unreal Engine has several features that can increase an apps performance, all based on the discussion outlined in [performance recommendations for mixed reality](../platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md). You're encouraged to read up on application bottlenecks, analyzing and profiling mixed reality apps, and general performance fixes before continuing.
develop\unreal\tutorials\unreal-uxt-ch1.md:31:* Microsoft HoloLens 2 device [configured for development](../../platform-capabilities-and-apis/using-visual-studio.md#enabling-developer-mode) or [Emulator](../../platform-capabilities-and-apis/using-the-hololens-emulator.md#hololens-2-emulator-overview)
develop\unreal\unreal-deploying.md:19:Both options require you to set up your HoloLens to use the [device portal](../platform-capabilities-and-apis/using-the-windows-device-portal.md) for development.
develop\unreal\unreal-qr-codes.md:20:Pay special attention to the [environment considerations](/hololens/hololens-environment-considerations) when QR codes are being placed in your app. <!-- This sentence might need to be changed.-->You can find more information on each of these topics and instructions on how to download the required NuGet package in the main [QR code tracking](../platform-capabilities-and-apis/qr-code-tracking.md) document.
discover\case-studies-overview.md:38:       [![Using the stabilization plane to reduce holographic turbulence](images/holotour-stabilization-plane-500px.jpg)](../develop/platform-capabilities-and-apis/case-study-using-the-stabilization-plane-to-reduce-holographic-turbulence.md)
discover\case-studies-overview.md:39:        **[Using the stabilization plane to reduce holographic turbulence](../develop/platform-capabilities-and-apis/case-study-using-the-stabilization-plane-to-reduce-holographic-turbulence.md)**<br>
discover\location-based-experiences.md:123:A: If you opt into the Windows 20H1 or later build via our Insider program, you can access a new interface for map sharing. This new functionality is available via the [Map Manager](../develop/platform-capabilities-and-apis/using-the-windows-device-portal.md#map-manager) interface of the Windows Device portal. To use this tool, follow the steps below:
discover\location-based-experiences.md:134:> Previously, it was possible to use the Spatial Data Packager Tool, however, that tool was originally released as unsupported and is now officially deprecated and no longer functional on 20H1. Instead, please use the inbox [Map Manager](../develop/platform-capabilities-and-apis/using-the-windows-device-portal.md#map-manager) tool as described above. 
distribute\distribute-overview.md:95:* You can also deploy builds to your device and share them with other developers who have Developer Mode enabled by [deploying and debugging with Visual Studio](../develop/platform-capabilities-and-apis/using-visual-studio.md) or [installing an application package with the Device Portal](../develop/platform-capabilities-and-apis/using-the-windows-device-portal.md#sideloading-applications).
distribute\submitting-an-app-to-the-microsoft-store.md:169:The Windows Universal Platform allows you to create a single application that runs across all of the Windows 10 device families. However, it doesn't guarantee that Universal Windows apps will just work on all device families. It's important to [test your app](../develop/platform-capabilities-and-apis/testing-your-app-on-hololens.md) on each of your chosen device families to ensure a good experience.
distribute\submitting-an-app-to-the-microsoft-store.md:232:If you want your app to reach as many Windows Mixed Reality immersive headset users as possible, [target](../develop/platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md) the PC specifications for [Windows Mixed Reality PCs with integrated graphics](/windows/mixed-reality/enthusiast-guide/windows-mixed-reality-minimum-pc-hardware-compatibility-guidelines).
distribute\submitting-an-app-to-the-microsoft-store.md:273:* [Understanding Performance for Mixed Reality](../develop/platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md)
distribute\submitting-an-app-to-the-microsoft-store.md:275:* [Testing your app on HoloLens](../develop/platform-capabilities-and-apis/testing-your-app-on-hololens.md)
out-of-scope\case-study-my-first-year-on-the-hololens-design-team.md:17:![Taking the Leap from 2D to 3D](../develop/platform-capabilities-and-apis/images/2D_to_3D-800px.gif)<br>
out-of-scope\case-study-my-first-year-on-the-hololens-design-team.md:31:![Body-locked](../develop/platform-capabilities-and-apis/images/bodylockedtagalong.gif)<br>
out-of-scope\case-study-my-first-year-on-the-hololens-design-team.md:36:![World-locked](../develop/platform-capabilities-and-apis/images/worldlocked.gif)<br>
out-of-scope\case-study-my-first-year-on-the-hololens-design-team.md:43:![Fragments - Diegetic UI examples](../develop/platform-capabilities-and-apis/images/fragments-game-example-1.jpg)<br>
out-of-scope\case-study-my-first-year-on-the-hololens-design-team.md:60:![Job Simulator](../develop/platform-capabilities-and-apis/images/job-simulator.gif)<br>
out-of-scope\case-study-my-first-year-on-the-hololens-design-team.md:67:![Doraemon’s magical door (left) and Ruby slippers(right)](../develop/platform-capabilities-and-apis/images/doraemons-magical-door-and-ruby-slippers.jpg)<br>
out-of-scope\case-study-my-first-year-on-the-hololens-design-team.md:78:![Available inputs in HoloLens](../develop/platform-capabilities-and-apis/images/inputs.jpg)<br>
out-of-scope\case-study-my-first-year-on-the-hololens-design-team.md:90:![Senso (Left) and Manus VR(Right)](../develop/platform-capabilities-and-apis/images/senso-and-manus-vr.jpg)<br>
out-of-scope\case-study-my-first-year-on-the-hololens-design-team.md:125:<td style="border-style: none" width="60"><img alt="Picture of Hae Jin Lee" width="60" height="60" src="../develop/platform-capabilities-and-apis/images/haejinlee.jpg"></td>
out-of-scope\case-study-representing-humans-in-mixed-reality.md:16:![Wide Out - James Turrell (1998)](../develop/platform-capabilities-and-apis/images/wide-out-james-turrell.jpg)
out-of-scope\case-study-representing-humans-in-mixed-reality.md:24:![Bang - Ai Weiwei (2013)](../develop/platform-capabilities-and-apis/images/bang-ai-weiwie.jpg)
out-of-scope\case-study-representing-humans-in-mixed-reality.md:36:![2D to Volumetric Video](../develop/platform-capabilities-and-apis/images/2d-to-volumetric-video.png)
out-of-scope\case-study-representing-humans-in-mixed-reality.md:48:![Mindshow in VR](../develop/platform-capabilities-and-apis/images/mindshow-in-vr-640px.jpg)
out-of-scope\case-study-representing-humans-in-mixed-reality.md:54:![Volumetric video SIGGRAPH 2015](../develop/platform-capabilities-and-apis/images/volumetric-video-siggraph-2015.gif)
out-of-scope\case-study-representing-humans-in-mixed-reality.md:66:![Future of conversation](../develop/platform-capabilities-and-apis/images/girl-with-dress.jpg)
out-of-scope\case-study-scaling-datascape-across-devices-with-different-performance.md:316:* [Understanding Performance for Mixed Reality](../develop/platform-capabilities-and-apis/understanding-performance-for-mixed-reality.md)
out-of-scope\cvpr-2018.md:28:![Sample application for viewing Research Mode sensor streams](../develop/platform-capabilities-and-apis/images/sensor-stream-viewer.jpg)
out-of-scope\eccv-2018.md:29:![Sample application for viewing Research Mode sensor streams](../develop/platform-capabilities-and-apis/images/sensor-stream-viewer.jpg)
out-of-scope\mixedrealityspatialdatapackager.md:15:> As of 8/1/2020 this tool is now deprecated and no longer functions on any platform. We recommend using the [Map Manager](../develop/platform-capabilities-and-apis/using-the-windows-device-portal.md#map-manager) tool in the Device Portal instead. 
